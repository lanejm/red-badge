[{"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/index.tsx":"1","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/reportWebVitals.ts":"2","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/App.tsx":"3","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Navbar/Navbar.tsx":"4","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Navbar/Logout/Logout.tsx":"5","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Auth/Auth.tsx":"6","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Edit.tsx":"7","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Search.tsx":"8","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Auth/LoginRegister/SignUpForm.tsx":"9","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Items.tsx":"10","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/List.tsx":"11","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Create.tsx":"12"},{"size":547,"mtime":1608084933721,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607641547906,"results":"15","hashOfConfig":"14"},{"size":4215,"mtime":1610328408141,"results":"16","hashOfConfig":"14"},{"size":913,"mtime":1609434325647,"results":"17","hashOfConfig":"14"},{"size":365,"mtime":1610325829993,"results":"18","hashOfConfig":"14"},{"size":2661,"mtime":1610328058272,"results":"19","hashOfConfig":"14"},{"size":4518,"mtime":1609453622682,"results":"20","hashOfConfig":"14"},{"size":1081,"mtime":1610316751811,"results":"21","hashOfConfig":"14"},{"size":4956,"mtime":1609890420728,"results":"22","hashOfConfig":"14"},{"size":4268,"mtime":1610328401560,"results":"23","hashOfConfig":"14"},{"size":1692,"mtime":1609891624640,"results":"24","hashOfConfig":"14"},{"size":8292,"mtime":1610314183365,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"u2ilh1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/index.tsx",[],["54","55"],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/reportWebVitals.ts",[],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/App.tsx",["56","57"],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Navbar/Navbar.tsx",[],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Navbar/Logout/Logout.tsx",[],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Auth/Auth.tsx",[],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Edit.tsx",[],["58","59"],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Search.tsx",["60"],"import * as React from 'react';\nimport { Component } from 'react';\n\nexport interface SearchProps {\n    giftName?: string;\n}\n\nexport interface SearchState {\n    giftName?: string;\n    setGiftsName: []\n}\n\nclass Search extends React.Component<SearchProps, SearchState> {\n    constructor(props: SearchProps) {\n        super(props);\n        this.state = {\n            giftName: 'gift',\n            setGiftsName: []\n\n        };\n    }\n\n        fetchGiftsName = () => {\n            fetch(`http://localhost:8081/gifts/${this.props.giftName}`, {\n                method: 'GET'\n            }).then(r => r.json())\n                .then(rArr => {\n                    this.setState({\n                        setGiftsName: rArr\n                    })\n                    // console.log(this.state.setGifts)\n                })\n\n        }\n\n        componentDidMount() {\n            this.fetchGiftsName()\n        }\n        render() {\n            return (\n                <div>\n                    {this.props.giftName}\n                </div>\n            );\n        }\n    }\n\n    export default Search;","/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Auth/LoginRegister/SignUpForm.tsx",["61"],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Items.tsx",[],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/List.tsx",["62","63","64","65","66","67","68","69","70","71"],"/Users/clairelane/Desktop/ElevenFifty Projects/JAVASCRIPTAUGUST2020/JavaScript-Library/Red Badge/red-badge/src/components/Gifts/Create.tsx",["72","73","74"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport '../Gifts/create.css'\nimport GiftsList from './List';\n\ninterface GiftCreateProp {\n    giftName: string;\n    description: string;\n    date: string;\n    purchased: string;\n    person: string;\n    from: string;\n    owner: string;\n    price: string;\n    sessionToken: string;\n    \n}\n\ninterface GiftCreateState {\n    giftName: string;\n    description: string;\n    date: string;\n    purchased: string;\n    person: string;\n    from: string;\n    owner: string;\n    price: string;\n    sessionToken: string;\n    setGifts: [];\n    userId: string;\n    modal: boolean;\n    toggle: boolean\n}\n\ninterface ModalProps {\n    isShown: boolean;\n    hide: () => void;\n    modalContent: JSX.Element;\n    headerText: string;\n}\n\n//make this like items class\nclass GiftsCreate extends React.Component<GiftCreateProp, GiftCreateState> {\n    constructor(props: GiftCreateProp) {\n        super(props)\n        this.state = {\n            giftName: 'gift',\n            description: 'description',\n            date: 'date',\n            purchased: 'purchased',\n            person: 'person',\n            from: 'from',\n            owner: 'owner',\n            price: 'price',\n            sessionToken: 'sessionToken',\n            userId: 'userId',\n            setGifts: [],\n            modal: false,\n            toggle: true\n        }\n       \n    }\n    // resetForm() {\n    //     this.setState = {\n    //         giftName: (null),\n    //         description: ('null')\n    //     }\n    // }\n\n    fetchGifts = () => {\n        fetch(`http://localhost:8081/gifts`, {\n            method: 'GET'\n        }).then(r => r.json())\n            .then(rArr => {\n                this.setState({\n                    setGifts: rArr\n                })\n            })\n    }\n    handleSubmit = (e: GiftCreateProp) => {\n        const body = {\n            giftName: 'Gift',\n            description: 'description',\n            date: 'date',\n            purchased: 'purchased',\n            person: 'person',\n            from: 'from',\n            owner: 'owner',\n            price: 'price',\n            sessionToken: 'sessionToken',\n        }\n        fetch('http://localhost:8081/gifts/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.props.sessionToken\n            },\n            // figure out how to get dynamic sessionToken\n            body: JSON.stringify(body)\n        }).then(r => r.json())\n            .then(rObj => {\n                console.log(rObj)\n                // this.resetForm()\n                // history.push('/')\n                this.fetchGifts()\n            })\n    }\n\n   componentDidMount() {\n       ontoggle = () => (!Modal)\n   }\n\n\n    render() {\n        return (\n            <div>\n                <Button color=\"success\" onclick={ontoggle}>Launch Modal</Button>\n                <Modal isOpen={this.state.modal} onclick={this.state.toggle} >\n                    <ModalHeader MouseEvent={this.state.toggle}>Create Gift</ModalHeader>\n                    <ModalBody>\n                        <form id='createGift' className='createGift'>\n                            <label htmlFor='giftName'>Gift Name: </label>\n                            <input placeholder='Ex: Necktie' id='giftName' value={this.props.giftName} onChange={e => this.state.giftName} required />\n                            <br />\n                            <label htmlFor='description'>Description: </label>\n                            <input placeholder='Write a brief description' id='description' value={this.props.description} onChange={e => this.state.description} />\n                            <br />\n                            <label htmlFor='date'>Date: </label>\n                            <input placeholder='Ex: 12/25/2020' id='date' value={this.props.date} onChange={e => this.state.date} required />\n                            <br />\n                            <label htmlFor='purchased'>Purchased: </label>\n                            <input placeholder='Where was this purchased?' id='purchased' value={this.props.purchased} onChange={e => this.state.purchased} />\n                            <br />\n                            <label htmlFor='person'>Person: </label>\n                            <input placeholder='Who was this for?' id='person' value={this.props.person} onChange={e => this.state.person} required />\n                            <br />\n                            <label htmlFor='from'>From: </label>\n                            <input placeholder='Who was this from?' id='from' value={this.props.from} onChange={e => this.state.from} required />\n                            <br />\n                            <label htmlFor='owner'>Owner: </label>\n                            <input placeholder='Onwer of List' id='owner' value={this.props.owner} onChange={e => this.state.owner} required />\n                            <br />\n                            <label htmlFor='price'>Price: </label>\n                            <input placeholder='Ex: $200' id='price' value={this.props.price} onChange={e => this.state.price} required />\n                        </form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color='secondary' style={{ marginLeft: '20px' }} id='resetForm'  type='button'>Reset Gift Form</Button>\n                        <Button color='success' style={{ marginLeft: '15px' }} id=\"submitGift\" type=\"submit\" >Submit Gift!</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n    }\n        /* // return (\n        //     <div>\n                <form id='createGift' className='createGift'>\n                    <label htmlFor='giftName'>Gift Name: </label>\n                    <input placeholder='Ex: Necktie' id='giftName' value={this.giftName} onChange={e => this.state.giftName(e.target.value)} required />\n                    <br />\n                    <label htmlFor='description'>Description: </label>\n                    <input placeholder='Write a brief description' id='description' value={description} onChange={e => setDescription(e.target.value)} />\n                    <br />\n                    <label htmlFor='date'>Date: </label>\n                    <input placeholder='Ex: 12/25/2020' id='date' value={date} onChange={e => setDate(e.target.value)} required />\n                    <br />\n                    <label htmlFor='purchased'>Purchased: </label>\n                    <input placeholder='Where was this purchased?' id='purchased' value={purchased} onChange={e => setPurchased(e.target.value)} />\n                    <br />\n                    <label htmlFor='person'>Person: </label>\n                    <input placeholder='Who was this for?' id='person' value={person} onChange={e => setPerson(e.target.value)} required />\n                    <br />\n                    <label htmlFor='from'>From: </label>\n                    <input placeholder='Who was this from?' id='from' value={from} onChange={e => setFrom(e.target.value)} required />\n                    <br />\n                    <label htmlFor='owner'>Owner: </label>\n                    <input placeholder='Onwer of List' id='owner' value={owner} onChange={e => setOwner(e.target.value)} required />\n                    <br />\n                    <label htmlFor='price'>Price: </label>\n                    <input placeholder='Ex: $200' id='price' value={price} onChange={e => setPrice(e.target.value)} required />\n        //             <br />\n        //             <Button color='secondary' style={{ marginLeft: '20px' }} id='resetForm' onClick={this.resetForm} type='button'>Reset Gift Form</Button>\n        //             <Button color='success' style={{ marginLeft: '15px' }} id=\"submitGift\" onClick={this.handleSubmit} type=\"submit\" >Submit Gift!</Button>\n        //             {/* <Alert color=\"success\">Gift submitted!</Alert> */\n            /* //         </form> */\n            /* //         <br />\n            //     </div > */\n\n\n}\n\n    export default GiftsCreate\n\n//make this a modal? \n//notes entry\n//alert when gift submitted?\n//styling for input fields.",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","severity":1,"message":"86","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":135,"column":21,"nodeType":"89","endLine":135,"endColumn":32},{"ruleId":"79","severity":1,"message":"90","line":19,"column":12,"nodeType":"81","messageId":"82","endLine":19,"endColumn":17},{"ruleId":"79","severity":1,"message":"91","line":20,"column":22,"nodeType":"81","messageId":"82","endLine":20,"endColumn":33},{"ruleId":"79","severity":1,"message":"92","line":21,"column":25,"nodeType":"81","messageId":"82","endLine":21,"endColumn":39},{"ruleId":"79","severity":1,"message":"93","line":22,"column":18,"nodeType":"81","messageId":"82","endLine":22,"endColumn":25},{"ruleId":"79","severity":1,"message":"94","line":23,"column":23,"nodeType":"81","messageId":"82","endLine":23,"endColumn":35},{"ruleId":"79","severity":1,"message":"95","line":24,"column":20,"nodeType":"81","messageId":"82","endLine":24,"endColumn":29},{"ruleId":"79","severity":1,"message":"96","line":25,"column":18,"nodeType":"81","messageId":"82","endLine":25,"endColumn":25},{"ruleId":"79","severity":1,"message":"97","line":26,"column":19,"nodeType":"81","messageId":"82","endLine":26,"endColumn":27},{"ruleId":"79","severity":1,"message":"98","line":27,"column":19,"nodeType":"81","messageId":"82","endLine":27,"endColumn":27},{"ruleId":"79","severity":1,"message":"99","line":28,"column":26,"nodeType":"81","messageId":"82","endLine":28,"endColumn":41},{"ruleId":"79","severity":1,"message":"100","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":20},{"ruleId":"79","severity":1,"message":"101","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":17},{"ruleId":"79","severity":1,"message":"102","line":36,"column":11,"nodeType":"81","messageId":"82","endLine":36,"endColumn":21},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["103"],["104"],"'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'gifts' is assigned a value but never used.","'setGiftName' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setPurchased' is assigned a value but never used.","'setPerson' is assigned a value but never used.","'setFrom' is assigned a value but never used.","'setOwner' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setSessionToken' is assigned a value but never used.","'useHistory' is defined but never used.","'GiftsList' is defined but never used.","'ModalProps' is defined but never used.","no-global-assign","no-unsafe-negation"]